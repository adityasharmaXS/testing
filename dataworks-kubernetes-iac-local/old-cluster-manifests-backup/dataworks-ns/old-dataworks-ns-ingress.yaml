apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx"},"generation":5,"name":"dashboard-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"app.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"nginx-gateway","servicePort":80},"path":"/"},{"backend":{"serviceName":"nginx-gateway","servicePort":80},"path":"/api/testingservice"},{"backend":{"serviceName":"nginx-gateway","servicePort":80},"path":"/api/jobfactory"},{"backend":{"serviceName":"nginx-gateway","servicePort":80},"path":"/api/outputfactory"},{"backend":{"serviceName":"nginx-gateway","servicePort":80},"path":"/api/crud"},{"backend":{"serviceName":"nginx-gateway","servicePort":80},"path":"/api/proxy"}]}}],"tls":[{"hosts":["app.thedataworks.com"],"secretName":"app-tls"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
    creationTimestamp: "2020-08-26T10:11:07Z"
    generation: 10
    name: dashboard-ingress
    namespace: dataworks
    resourceVersion: "68134281"
    selfLink: /apis/extensions/v1beta1/namespaces/dataworks/ingresses/dashboard-ingress
    uid: 35fefbe8-80db-4424-87c7-7d05a15321db
  spec:
    rules:
    - host: app.thedataworks.com
      http:
        paths:
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/testingservice
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/jobfactory
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/outputfactory
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/crud
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/ws-service
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/proxy
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/indexing
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/script
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/notification
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/reminder
        - backend:
            serviceName: nginx-gateway
            servicePort: 80
          path: /api/slack
    tls:
    - hosts:
      - app.thedataworks.com
      secretName: app-tls
  status:
    loadBalancer:
      ingress:
      - ip: 20.37.130.246
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/auth-realm":"Authentication Required ","nginx.ingress.kubernetes.io/auth-secret":"dataworks/basic-auth","nginx.ingress.kubernetes.io/auth-type":"basic"},"name":"grafana-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"grafana.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"grafana-proxy","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["grafana.thedataworks.com"],"secretName":"grafana-tls"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
      nginx.ingress.kubernetes.io/auth-secret: dataworks/basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    creationTimestamp: "2020-08-26T10:07:56Z"
    generation: 1
    name: grafana-ingress
    namespace: dataworks
    resourceVersion: "68134283"
    selfLink: /apis/extensions/v1beta1/namespaces/dataworks/ingresses/grafana-ingress
    uid: 1b1bab04-6084-4592-be54-743c76fd3773
  spec:
    rules:
    - host: grafana.thedataworks.com
      http:
        paths:
        - backend:
            serviceName: grafana-proxy
            servicePort: 3000
          path: /
    tls:
    - hosts:
      - grafana.thedataworks.com
      secretName: grafana-tls
  status:
    loadBalancer:
      ingress:
      - ip: 20.37.130.246
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx"},"generation":1,"name":"meritdashboard-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"meritdashboard.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/"},{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/api/testingservice"},{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/api/jobfactory"},{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/api/outputfactory"}]}}],"tls":[{"hosts":["meritdashboard.thedataworks.com"],"secretName":"merit-tls"}]}}
      kubernetes.io/ingress.class: nginx
    creationTimestamp: "2020-08-26T10:13:46Z"
    generation: 1
    name: meritdashboard-ingress
    namespace: dataworks
    resourceVersion: "68134284"
    selfLink: /apis/extensions/v1beta1/namespaces/dataworks/ingresses/meritdashboard-ingress
    uid: a1f39d60-45de-431a-83f8-30d9b2ffce0a
  spec:
    rules:
    - host: meritdashboard.thedataworks.com
      http:
        paths:
        - backend:
            serviceName: merit-nginx-gateway
            servicePort: 80
          path: /
        - backend:
            serviceName: merit-nginx-gateway
            servicePort: 80
          path: /api/testingservice
        - backend:
            serviceName: merit-nginx-gateway
            servicePort: 80
          path: /api/jobfactory
        - backend:
            serviceName: merit-nginx-gateway
            servicePort: 80
          path: /api/outputfactory
    tls:
    - hosts:
      - meritdashboard.thedataworks.com
      secretName: merit-tls
  status:
    loadBalancer:
      ingress:
      - ip: 20.37.130.246
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/auth-realm":"Authentication Required ","nginx.ingress.kubernetes.io/auth-secret":"dataworks/basic-auth","nginx.ingress.kubernetes.io/auth-type":"basic","nginx.org/websocket-services":"weaveworks"},"name":"weaveworks-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"weave.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"weaveworks","servicePort":80}}]}}],"tls":[{"hosts":["weave.thedataworks.com"],"secretName":"weave-tls"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
      nginx.ingress.kubernetes.io/auth-secret: dataworks/basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.org/websocket-services: weaveworks
    creationTimestamp: "2020-08-26T10:14:46Z"
    generation: 1
    name: weaveworks-ingress
    namespace: dataworks
    resourceVersion: "68134282"
    selfLink: /apis/extensions/v1beta1/namespaces/dataworks/ingresses/weaveworks-ingress
    uid: a82d6766-291e-405c-b379-cb903079bce0
  spec:
    rules:
    - host: weave.thedataworks.com
      http:
        paths:
        - backend:
            serviceName: weaveworks
            servicePort: 80
    tls:
    - hosts:
      - weave.thedataworks.com
      secretName: weave-tls
  status:
    loadBalancer:
      ingress:
      - ip: 20.37.130.246
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
