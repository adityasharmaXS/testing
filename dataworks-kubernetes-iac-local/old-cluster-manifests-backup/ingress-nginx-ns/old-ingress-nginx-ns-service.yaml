apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"cert-manager","helm.sh/chart":"cert-manager-v0.16.1"},"name":"cert-manager","namespace":"cert-manager"},"spec":{"ports":[{"port":9402,"protocol":"TCP","targetPort":9402}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager"},"type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T09:23:56Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      helm.sh/chart: cert-manager-v0.16.1
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "119197"
    selfLink: /api/v1/namespaces/cert-manager/services/cert-manager
    uid: 8efffa38-b298-486e-9728-3521aec634b9
  spec:
    clusterIP: 10.0.162.234
    ports:
    - port: 9402
      protocol: TCP
      targetPort: 9402
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"webhook","helm.sh/chart":"cert-manager-v0.16.1"},"name":"cert-manager-webhook","namespace":"cert-manager"},"spec":{"ports":[{"name":"https","port":443,"targetPort":10250}],"selector":{"app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook"},"type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T09:23:57Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      helm.sh/chart: cert-manager-v0.16.1
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "119200"
    selfLink: /api/v1/namespaces/cert-manager/services/cert-manager-webhook
    uid: 183387f4-8447-426a-9be6-593d0a52490c
  spec:
    clusterIP: 10.0.85.156
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 10250
    selector:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"captcha-solver","tier":"dataworks"},"name":"captcha-solver","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"captcha-solver"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2020-08-19T09:32:56Z"
    labels:
      app: captcha-solver
      tier: dataworks
    name: captcha-solver
    namespace: dataworks
    resourceVersion: "120864"
    selfLink: /api/v1/namespaces/dataworks/services/captcha-solver
    uid: be8e93c6-dfb4-4be0-acc4-d1de31e28204
  spec:
    clusterIP: 10.0.161.88
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: captcha-solver
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"configdatamanagementservice","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":3003}],"selector":{"app":"configdatamanagementservice"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T09:47:22Z"
    name: configdatamanagementservice
    namespace: dataworks
    resourceVersion: "60169892"
    selfLink: /api/v1/namespaces/dataworks/services/configdatamanagementservice
    uid: 05c850a1-7632-45e8-a6cd-54ca3c3937aa
  spec:
    clusterIP: 10.0.61.20
    ports:
    - name: standard
      port: 80
      protocol: TCP
      targetPort: 3001
    - name: grpc
      port: 53001
      protocol: TCP
      targetPort: 53001
    selector:
      app: configdatamanagementservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"dashboardui","namespace":"dataworks"},"spec":{"ports":[{"port":3000}],"selector":{"app":"dashboardui"},"type":"LoadBalancer"}}
    creationTimestamp: "2020-08-19T09:50:03Z"
    name: dashboardui
    namespace: dataworks
    resourceVersion: "9894517"
    selfLink: /api/v1/namespaces/dataworks/services/dashboardui
    uid: bfb55066-b03a-4150-b82e-542b955dadee
  spec:
    clusterIP: 10.0.202.81
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app: dashboardui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"forward-proxy","tier":"dataworks"},"name":"forward-proxy","namespace":"dataworks"},"spec":{"clusterIP":"10.0.131.143","ports":[{"name":"port8100","port":8100,"protocol":"TCP","targetPort":8100},{"name":"port8101","port":8101,"protocol":"TCP","targetPort":8101},{"name":"port8102","port":8102,"protocol":"TCP","targetPort":8102},{"name":"port8103","port":8103,"protocol":"TCP","targetPort":8103},{"name":"port8104","port":8104,"protocol":"TCP","targetPort":8104},{"name":"port8105","port":8105,"protocol":"TCP","targetPort":8105},{"name":"port8106","port":8106,"protocol":"TCP","targetPort":8106}],"selector":{"app":"forward-proxy"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T09:54:12Z"
    labels:
      app: forward-proxy
      tier: dataworks
    name: forward-proxy
    namespace: dataworks
    resourceVersion: "124677"
    selfLink: /api/v1/namespaces/dataworks/services/forward-proxy
    uid: 19708315-42d7-4df6-baa2-a7ce37ebd5a1
  spec:
    clusterIP: 10.0.131.143
    ports:
    - name: port8100
      port: 8100
      protocol: TCP
      targetPort: 8100
    - name: port8101
      port: 8101
      protocol: TCP
      targetPort: 8101
    - name: port8102
      port: 8102
      protocol: TCP
      targetPort: 8102
    - name: port8103
      port: 8103
      protocol: TCP
      targetPort: 8103
    - name: port8104
      port: 8104
      protocol: TCP
      targetPort: 8104
    - name: port8105
      port: 8105
      protocol: TCP
      targetPort: 8105
    - name: port8106
      port: 8106
      protocol: TCP
      targetPort: 8106
    selector:
      app: forward-proxy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pulsar","component":"grafana"},"name":"grafana-proxy","namespace":"dataworks"},"spec":{"ports":[{"name":"http","port":3000,"protocol":"TCP"}],"selector":{"app":"pulsar","component":"grafana"},"type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T06:28:36Z"
    labels:
      app: pulsar
      component: grafana
    name: grafana-proxy
    namespace: dataworks
    resourceVersion: "100591"
    selfLink: /api/v1/namespaces/dataworks/services/grafana-proxy
    uid: 2f93236f-7386-4e4a-8e81-fd80b340f0b3
  spec:
    clusterIP: 10.0.200.209
    ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: pulsar
      component: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pulsar","component":"grafana"},"name":"grafana1","namespace":"dataworks"},"spec":{"ports":[{"name":"grafana","port":3000,"protocol":"TCP"}],"selector":{"app":"pulsar","component":"grafana"},"type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T06:28:35Z"
    labels:
      app: pulsar
      component: grafana
    name: grafana1
    namespace: dataworks
    resourceVersion: "100587"
    selfLink: /api/v1/namespaces/dataworks/services/grafana1
    uid: ffacb285-8fe8-4226-8490-07c28ca25313
  spec:
    clusterIP: 10.0.65.221
    ports:
    - name: grafana
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: pulsar
      component: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-10-07T10:15:38Z"
    labels:
      app: indexingservice
      tier: dataworks
    name: indexingservice
    namespace: dataworks
    resourceVersion: "55538332"
    selfLink: /api/v1/namespaces/dataworks/services/indexingservice
    uid: c3376904-74fd-4ee8-87a4-9d32d263689a
  spec:
    clusterIP: 10.0.173.96
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 1323
    - name: grpc
      port: 51323
      protocol: TCP
      targetPort: 51323
    selector:
      app: indexingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-04-18T17:43:26Z"
    labels:
      name: jaeger-operator
    name: jaeger-operator-metrics
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jaeger-operator
      uid: 165d1dca-837f-4672-8b04-b22773d8c56f
    resourceVersion: "63595215"
    selfLink: /api/v1/namespaces/dataworks/services/jaeger-operator-metrics
    uid: 3a554d91-de40-4f84-90f1-7dde08a3a523
  spec:
    clusterIP: 10.0.186.104
    ports:
    - name: http-metrics
      port: 8383
      protocol: TCP
      targetPort: 8383
    - name: cr-metrics
      port: 8686
      protocol: TCP
      targetPort: 8686
    selector:
      name: jaeger-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"job-manager","tier":"dataworks"},"name":"job-manager","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":3335}],"selector":{"app":"job-manager"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T11:32:47Z"
    labels:
      app: job-manager
      tier: dataworks
    name: job-manager
    namespace: dataworks
    resourceVersion: "142543"
    selfLink: /api/v1/namespaces/dataworks/services/job-manager
    uid: 7da68ed8-f6df-4e18-b7f7-c9fd7d1751f1
  spec:
    clusterIP: 10.0.243.71
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3335
    selector:
      app: job-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"jobfactory","tier":"dataworks"},"name":"jobfactory","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":3334}],"selector":{"app":"jobfactory"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T10:08:41Z"
    labels:
      app: jobfactory
      tier: dataworks
    name: jobfactory
    namespace: dataworks
    resourceVersion: "23292237"
    selfLink: /api/v1/namespaces/dataworks/services/jobfactory
    uid: d7a5a3df-b544-4019-932e-155ec281887a
  spec:
    clusterIP: 10.0.191.240
    ports:
    - name: standard
      port: 80
      protocol: TCP
      targetPort: 3334
    - name: grpc
      port: 53334
      protocol: TCP
      targetPort: 53334
    selector:
      app: jobfactory
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"jupyterlab","tier":"dataworks"},"name":"jupyterlab","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":8888}],"selector":{"app":"jupyterlab"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T05:55:18Z"
    labels:
      app: jupyterlab
      tier: dataworks
    name: jupyterlab
    namespace: dataworks
    resourceVersion: "97159"
    selfLink: /api/v1/namespaces/dataworks/services/jupyterlab
    uid: b5aeddd7-632e-445d-a362-f90407e109a3
  spec:
    clusterIP: 10.0.35.12
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8888
    selector:
      app: jupyterlab
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"merit-nginx-gateway","tier":"dataworks"},"name":"merit-nginx-gateway","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"merit-nginx-gateway"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T10:12:16Z"
    labels:
      app: merit-nginx-gateway
      tier: dataworks
    name: merit-nginx-gateway
    namespace: dataworks
    resourceVersion: "127962"
    selfLink: /api/v1/namespaces/dataworks/services/merit-nginx-gateway
    uid: 5d7f99e1-fa05-49ae-af8f-9743e7e0ce36
  spec:
    clusterIP: 10.0.97.155
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: merit-nginx-gateway
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"meritdashboard","tier":"dataworks"},"name":"meritdashboard","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":3001}],"selector":{"app":"meritdashboard"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T11:37:24Z"
    labels:
      app: meritdashboard
      tier: dataworks
    name: meritdashboard
    namespace: dataworks
    resourceVersion: "143418"
    selfLink: /api/v1/namespaces/dataworks/services/meritdashboard
    uid: 82b25980-4c00-4289-a18a-179fe878eb95
  spec:
    clusterIP: 10.0.82.22
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3001
    selector:
      app: meritdashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"mongodb","tier":"dataworks"},"name":"mongodb","namespace":"dataworks"},"spec":{"ports":[{"port":27017,"protocol":"TCP","targetPort":27017}],"selector":{"app":"mongodb"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T05:06:52Z"
    labels:
      app: mongodb
      tier: dataworks
    name: mongodb
    namespace: dataworks
    resourceVersion: "92063"
    selfLink: /api/v1/namespaces/dataworks/services/mongodb
    uid: 7a351291-a6a8-4201-9796-6f8e6defb0f3
  spec:
    clusterIP: 10.0.48.182
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"nginx-gateway","tier":"dataworks"},"name":"nginx-gateway","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"nginx-gateway"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T10:16:53Z"
    labels:
      app: nginx-gateway
      tier: dataworks
    name: nginx-gateway
    namespace: dataworks
    resourceVersion: "128810"
    selfLink: /api/v1/namespaces/dataworks/services/nginx-gateway
    uid: bb100540-bbb7-46fb-9fa0-f5a6405807c1
  spec:
    clusterIP: 10.0.233.66
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx-gateway
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-02-18T14:48:26Z"
    name: notification-service
    namespace: dataworks
    resourceVersion: "44268303"
    selfLink: /api/v1/namespaces/dataworks/services/notification-service
    uid: 3df58313-1b32-4595-ae7b-434f08d2979c
  spec:
    clusterIP: 10.0.247.50
    ports:
    - port: 80
      protocol: TCP
      targetPort: 1323
    selector:
      app: notification-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"outputfactory","tier":"dataworks"},"name":"outputfactory","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":3003}],"selector":{"app":"outputfactory"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T10:19:29Z"
    labels:
      app: outputfactory
      tier: dataworks
    name: outputfactory
    namespace: dataworks
    resourceVersion: "129313"
    selfLink: /api/v1/namespaces/dataworks/services/outputfactory
    uid: 4fd3bd87-9cc8-4f9d-a862-101a0e39528b
  spec:
    clusterIP: 10.0.87.54
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3003
    selector:
      app: outputfactory
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"postgres","tier":"dataworks"},"name":"postgres","namespace":"dataworks"},"spec":{"ports":[{"port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"app":"postgres"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T05:25:04Z"
    labels:
      app: postgres
      tier: dataworks
    name: postgres
    namespace: dataworks
    resourceVersion: "93886"
    selfLink: /api/v1/namespaces/dataworks/services/postgres
    uid: f5693ebd-488d-45de-ae6d-2c6f1906952a
  spec:
    clusterIP: 10.0.184.46
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgres
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pulsar","component":"prometheus"},"name":"prometheus1","namespace":"dataworks"},"spec":{"ports":[{"name":"prometheus","port":9090,"protocol":"TCP"}],"selector":{"app":"pulsar","component":"prometheus"},"type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T06:29:23Z"
    labels:
      app: pulsar
      component: prometheus
    name: prometheus1
    namespace: dataworks
    resourceVersion: "100675"
    selfLink: /api/v1/namespaces/dataworks/services/prometheus1
    uid: 6b1282f0-250f-4d4b-ae0f-fd99c22e3f2e
  spec:
    clusterIP: 10.0.76.4
    ports:
    - name: prometheus
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: pulsar
      component: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"proxy-gateway","tier":"dataworks"},"name":"proxy-gateway","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"proxy-gateway"},"sessionAffinity":"None","type":"LoadBalancer"}}
    creationTimestamp: "2020-08-19T10:22:49Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: proxy-gateway
      tier: dataworks
    name: proxy-gateway
    namespace: dataworks
    resourceVersion: "130007"
    selfLink: /api/v1/namespaces/dataworks/services/proxy-gateway
    uid: a8c9cad3-e7b6-4620-a573-09dd8bbfd8d1
  spec:
    clusterIP: 10.0.196.167
    externalTrafficPolicy: Cluster
    ports:
    - nodePort: 32325
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: proxy-gateway
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 13.86.125.34
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"redis","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":6379}],"selector":{"app":"redis"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T05:32:03Z"
    name: redis
    namespace: dataworks
    resourceVersion: "94637"
    selfLink: /api/v1/namespaces/dataworks/services/redis
    uid: 40c2e765-20fa-431c-83eb-9a62f5e7293a
  spec:
    clusterIP: 10.0.2.107
    ports:
    - port: 80
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-02-18T14:48:51Z"
    name: reminder-service
    namespace: dataworks
    resourceVersion: "44268374"
    selfLink: /api/v1/namespaces/dataworks/services/reminder-service
    uid: a49f4f02-1508-411c-9a49-671685b035a6
  spec:
    clusterIP: 10.0.18.178
    ports:
    - port: 80
      protocol: TCP
      targetPort: 1323
    selector:
      app: reminder-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-11-24T12:56:46Z"
    name: scheduler
    namespace: dataworks
    resourceVersion: "23293754"
    selfLink: /api/v1/namespaces/dataworks/services/scheduler
    uid: 56d540ab-dbe6-42b2-a91c-4d9ac986e973
  spec:
    clusterIP: 10.0.90.103
    ports:
    - name: standard
      port: 80
      protocol: TCP
      targetPort: 3005
    selector:
      app: scheduler
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"schedulerservice","tier":"dataworks"},"name":"schedulerservice","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"schedulerservice"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T11:23:56Z"
    labels:
      app: schedulerservice
      tier: dataworks
    name: schedulerservice
    namespace: dataworks
    resourceVersion: "140765"
    selfLink: /api/v1/namespaces/dataworks/services/schedulerservice
    uid: 974e9828-41fc-4888-8c3c-2cc2cd36ad31
  spec:
    clusterIP: 10.0.75.52
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: schedulerservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-01-29T15:13:09Z"
    name: script-service
    namespace: dataworks
    resourceVersion: "40139937"
    selfLink: /api/v1/namespaces/dataworks/services/script-service
    uid: b5692090-3453-4e8a-9055-7c2272aab603
  spec:
    clusterIP: 10.0.70.246
    ports:
    - port: 80
      protocol: TCP
      targetPort: 5000
    selector:
      app: script-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-04-27T12:10:42Z"
    labels:
      app: slack-service
      tier: dataworks
    name: slack-service
    namespace: dataworks
    resourceVersion: "66432150"
    selfLink: /api/v1/namespaces/dataworks/services/slack-service
    uid: af5f5066-7e9d-405d-93b6-57787c688df3
  spec:
    clusterIP: 10.0.101.55
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3007
    - name: grpc
      port: 53007
      protocol: TCP
      targetPort: 53007
    selector:
      app: slack-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: superset
      meta.helm.sh/release-namespace: dataworks
    creationTimestamp: "2020-08-19T08:01:12Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: superset
      app.kubernetes.io/managed-by: Helm
      chart: superset-0.1.0
      heritage: Helm
      release: superset
    name: superset
    namespace: dataworks
    resourceVersion: "110545"
    selfLink: /api/v1/namespaces/dataworks/services/superset
    uid: 6376ae3e-c554-4264-b26d-6e1c46f92869
  spec:
    clusterIP: 10.0.30.87
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31938
      port: 8088
      protocol: TCP
      targetPort: http
    selector:
      app: superset
      release: superset
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 52.154.152.8
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"testingservice","tier":"dataworks"},"name":"testingservice","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":3333}],"selector":{"app":"testingservice"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T11:26:06Z"
    labels:
      app: testingservice
      tier: dataworks
    name: testingservice
    namespace: dataworks
    resourceVersion: "141172"
    selfLink: /api/v1/namespaces/dataworks/services/testingservice
    uid: 107c4976-c52a-479f-854a-e57dd35064aa
  spec:
    clusterIP: 10.0.131.223
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3333
    selector:
      app: testingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"weaveworks","tier":"dataworks"},"name":"weaveworks","namespace":"dataworks"},"spec":{"ports":[{"name":"weaveworks","port":80,"protocol":"TCP","targetPort":4040}],"selector":{"app":"weaveworks"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T05:40:53Z"
    labels:
      app: weaveworks
      tier: dataworks
    name: weaveworks
    namespace: dataworks
    resourceVersion: "95628"
    selfLink: /api/v1/namespaces/dataworks/services/weaveworks
    uid: bb61d989-5d82-4570-85a1-5b5ffbeae456
  spec:
    clusterIP: 10.0.10.107
    ports:
    - name: weaveworks
      port: 80
      protocol: TCP
      targetPort: 4040
    selector:
      app: weaveworks
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"workerbot","tier":"dataworks"},"name":"workerbot","namespace":"dataworks"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"workerbot"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2020-08-19T11:28:42Z"
    labels:
      app: workerbot
      tier: dataworks
    name: workerbot
    namespace: dataworks
    resourceVersion: "141686"
    selfLink: /api/v1/namespaces/dataworks/services/workerbot
    uid: c24f2544-2057-44d6-9477-0167477c14b7
  spec:
    clusterIP: 10.0.133.42
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: workerbot
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-10-28T13:59:31Z"
    labels:
      app: ws-service
      tier: dataworks
    name: ws-service
    namespace: dataworks
    resourceVersion: "17125620"
    selfLink: /api/v1/namespaces/dataworks/services/ws-service
    uid: c3a9f7a6-9a83-4d5f-b0a0-82070c80672b
  spec:
    clusterIP: 10.0.89.108
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3004
    selector:
      app: ws-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-08-18T13:52:46Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "146"
    selfLink: /api/v1/namespaces/default/services/kubernetes
    uid: c60a27c7-6c17-41af-bd18-5bed366aea0a
  spec:
    clusterIP: 10.0.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2020-08-19T09:18:50Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/version: 0.34.1
      helm.sh/chart: ingress-nginx-2.11.3
    name: ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "126668"
    selfLink: /api/v1/namespaces/ingress-nginx/services/ingress-nginx-controller
    uid: 91ad0088-3b39-4f11-bbf3-fcc988ca5968
  spec:
    clusterIP: 10.0.194.243
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30488
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 31973
      port: 443
      protocol: TCP
      targetPort: https
    - name: proxied-tcp-8102
      nodePort: 32492
      port: 8102
      protocol: TCP
      targetPort: 8102
    - name: proxied-tcp-8103
      nodePort: 31563
      port: 8103
      protocol: TCP
      targetPort: 8103
    - name: proxied-tcp-8104
      nodePort: 30005
      port: 8104
      protocol: TCP
      targetPort: 8104
    - name: proxied-tcp-8105
      nodePort: 30656
      port: 8105
      protocol: TCP
      targetPort: 8105
    - name: proxied-tcp-8106
      nodePort: 32331
      port: 8106
      protocol: TCP
      targetPort: 8106
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 20.37.130.246
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2020-08-19T09:18:50Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/version: 0.34.1
      helm.sh/chart: ingress-nginx-2.11.3
    name: ingress-nginx-controller-admission
    namespace: ingress-nginx
    resourceVersion: "118502"
    selfLink: /api/v1/namespaces/ingress-nginx/services/ingress-nginx-controller-admission
    uid: 31aa9790-e796-43de-8ad0-fdb223bbdb67
  spec:
    clusterIP: 10.0.249.54
    ports:
    - name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kube-system"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2020-08-18T13:53:07Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kube-system
    resourceVersion: "424"
    selfLink: /api/v1/namespaces/kube-system/services/dashboard-metrics-scraper
    uid: 42426df1-adfd-4b27-8b6c-82be9baa36f8
  spec:
    clusterIP: 10.0.189.217
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.0.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: "2020-08-18T13:53:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "309"
    selfLink: /api/v1/namespaces/kube-system/services/kube-dns
    uid: 7546d718-fd99-41fe-9350-f171987ac71e
  spec:
    clusterIP: 10.0.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kube-system"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2020-08-18T13:53:07Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kube-system
    resourceVersion: "414"
    selfLink: /api/v1/namespaces/kube-system/services/kubernetes-dashboard
    uid: 25754c00-9615-4bd0-9643-1fcbb3599ad3
  spec:
    clusterIP: 10.0.220.121
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2020-08-18T13:53:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "330"
    selfLink: /api/v1/namespaces/kube-system/services/metrics-server
    uid: 78ab5269-48b7-477f-9db1-7c2c1713ab0f
  spec:
    clusterIP: 10.0.143.2
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
