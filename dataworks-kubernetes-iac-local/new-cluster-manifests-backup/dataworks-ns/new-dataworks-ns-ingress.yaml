apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/proxy-body-size":"100m"},"labels":{"velero.io/backup-name":"dataworksns","velero.io/restore-name":"dataworksns-20210626065414"},"name":"dashboard-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"app1.thedataworks.com","http":{"paths":[{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/testingservice","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/jobfactory","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/outputfactory","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/crud","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/ws-service","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/proxy","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/indexing","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/script","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/notification","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/reminder","pathType":"ImplementationSpecific"},{"backend":{"service":{"name":"nginx-gateway","port":{"number":80}}},"path":"/api/slack","pathType":"ImplementationSpecific"}]}}],"tls":[{"hosts":["app1.thedataworks.com"],"secretName":"dashboard-tls-secret"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
    creationTimestamp: "2021-06-26T06:54:42Z"
    generation: 6
    labels:
      velero.io/backup-name: dataworksns
      velero.io/restore-name: dataworksns-20210626065414
    name: dashboard-ingress
    namespace: dataworks
    resourceVersion: "800319"
    uid: 687f06e9-7762-4c16-a47d-d7f1a332c582
  spec:
    rules:
    - host: app1.thedataworks.com
      http:
        paths:
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/testingservice
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/jobfactory
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/outputfactory
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/crud
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/ws-service
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/proxy
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/indexing
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/script
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/notification
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/reminder
          pathType: ImplementationSpecific
        - backend:
            service:
              name: nginx-gateway
              port:
                number: 80
          path: /api/slack
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - app1.thedataworks.com
      secretName: dashboard-tls-secret
  status:
    loadBalancer:
      ingress:
      - ip: 10.240.0.39
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/auth-realm":"Authentication Required ","nginx.ingress.kubernetes.io/auth-secret":"dataworks/basic-auth","nginx.ingress.kubernetes.io/auth-type":"basic"},"name":"grafana-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"grafana.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"grafana-proxy","servicePort":3000},"path":"/"}]}}],"tls":[{"hosts":["grafana.thedataworks.com"],"secretName":"grafana-tls"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
      nginx.ingress.kubernetes.io/auth-secret: dataworks/basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    creationTimestamp: "2021-06-26T06:54:42Z"
    generation: 2
    labels:
      velero.io/backup-name: dataworksns
      velero.io/restore-name: dataworksns-20210626065414
    name: grafana-ingress
    namespace: dataworks
    resourceVersion: "485107"
    uid: f2aa5529-b598-44e8-8d8d-51c1ff34b3ac
  spec:
    rules:
    - host: grafana1.thedataworks.com
      http:
        paths:
        - backend:
            service:
              name: grafana-proxy
              port:
                number: 3000
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - grafana.thedataworks.com
      secretName: grafana-tls
  status:
    loadBalancer:
      ingress:
      - ip: 10.240.0.39
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx"},"generation":1,"name":"meritdashboard-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"meritdashboard.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/"},{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/api/testingservice"},{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/api/jobfactory"},{"backend":{"serviceName":"merit-nginx-gateway","servicePort":80},"path":"/api/outputfactory"}]}}],"tls":[{"hosts":["meritdashboard.thedataworks.com"],"secretName":"merit-tls"}]}}
      kubernetes.io/ingress.class: nginx
    creationTimestamp: "2021-06-26T06:54:42Z"
    generation: 2
    labels:
      velero.io/backup-name: dataworksns
      velero.io/restore-name: dataworksns-20210626065414
    name: meritdashboard-ingress
    namespace: dataworks
    resourceVersion: "485132"
    uid: 81ad623a-497d-4ddb-9951-23a0c96b1aec
  spec:
    rules:
    - host: meritdashboard1.thedataworks.com
      http:
        paths:
        - backend:
            service:
              name: merit-nginx-gateway
              port:
                number: 80
          path: /
          pathType: ImplementationSpecific
        - backend:
            service:
              name: merit-nginx-gateway
              port:
                number: 80
          path: /api/testingservice
          pathType: ImplementationSpecific
        - backend:
            service:
              name: merit-nginx-gateway
              port:
                number: 80
          path: /api/jobfactory
          pathType: ImplementationSpecific
        - backend:
            service:
              name: merit-nginx-gateway
              port:
                number: 80
          path: /api/outputfactory
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - meritdashboard.thedataworks.com
      secretName: merit-tls
  status:
    loadBalancer:
      ingress:
      - ip: 10.240.0.39
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/auth-realm":"Authentication Required ","nginx.ingress.kubernetes.io/auth-secret":"dataworks/basic-auth","nginx.ingress.kubernetes.io/auth-type":"basic","nginx.org/websocket-services":"weaveworks"},"name":"weaveworks-ingress","namespace":"dataworks"},"spec":{"rules":[{"host":"weave.thedataworks.com","http":{"paths":[{"backend":{"serviceName":"weaveworks","servicePort":80}}]}}],"tls":[{"hosts":["weave.thedataworks.com"],"secretName":"weave-tls"}]}}
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
      nginx.ingress.kubernetes.io/auth-secret: dataworks/basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.org/websocket-services: weaveworks
    creationTimestamp: "2021-06-26T06:54:42Z"
    generation: 2
    labels:
      velero.io/backup-name: dataworksns
      velero.io/restore-name: dataworksns-20210626065414
    name: weaveworks-ingress
    namespace: dataworks
    resourceVersion: "485162"
    uid: 899a0ce7-6b9e-470d-a15e-5754bbdb0d72
  spec:
    rules:
    - host: weave1.thedataworks.com
      http:
        paths:
        - backend:
            service:
              name: weaveworks
              port:
                number: 80
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - weave.thedataworks.com
      secretName: weave-tls
  status:
    loadBalancer:
      ingress:
      - ip: 10.240.0.39
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
