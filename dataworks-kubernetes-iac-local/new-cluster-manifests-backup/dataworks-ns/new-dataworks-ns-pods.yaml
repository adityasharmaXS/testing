apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T05:59:13Z"
    generateName: captcha-solver-bdd96d6d6-
    labels:
      app: captcha-solver
      pod-template-hash: bdd96d6d6
      tier: dataworks
    name: captcha-solver-bdd96d6d6-w2zt7
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: captcha-solver-bdd96d6d6
      uid: 5c2e8587-9dfa-432f-9443-97fc91fc6da1
    resourceVersion: "738387"
    uid: 97f35a48-f3a4-4d42-8e77-fc999b199182
  spec:
    containers:
    - image: dwproductioncentralus.azurecr.io/captcha_solver:1.0.1
      imagePullPolicy: Always
      name: captcha-solver
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:59:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:59:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:59:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:59:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://16de9168f8194147aa44d65956603665ad4358166bc9ee99fa041bd7e4d0e364
      image: dwproductioncentralus.azurecr.io/captcha_solver:1.0.1
      imageID: dwproductioncentralus.azurecr.io/captcha_solver@sha256:c48721051e9a26108729abf8569aec6642f52f1c431c616e6d7441530e37cd6d
      lastState: {}
      name: captcha-solver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T05:59:15Z"
    hostIP: 10.240.0.7
    phase: Running
    podIP: 10.240.0.17
    podIPs:
    - ip: 10.240.0.17
    qosClass: Burstable
    startTime: "2021-06-30T05:59:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:00:30Z"
    generateName: configdatamanagementservice-69bff8cc56-
    labels:
      app: configdatamanagementservice
      pod-template-hash: 69bff8cc56
    name: configdatamanagementservice-69bff8cc56-chvrz
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: configdatamanagementservice-69bff8cc56
      uid: 244a8016-b325-4990-9317-90a825b3ead6
    resourceVersion: "738550"
    uid: bada636d-ea82-4930-9e20-af4a8399b487
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          secretKeyRef:
            key: redis_host
            name: configdatamanagement-secret
      - name: REDIS_PORT
        valueFrom:
          secretKeyRef:
            key: redis_port
            name: configdatamanagement-secret
      - name: JWT
        valueFrom:
          secretKeyRef:
            key: jwt
            name: configdatamanagement-secret
      - name: SESSION_KEY
        valueFrom:
          secretKeyRef:
            key: session_key
            name: configdatamanagement-secret
      - name: PORT
        value: "3001"
      - name: GRPCPORT
        value: "53001"
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            key: postgres_user
            name: configdatamanagement-secret
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres_password
            name: configdatamanagement-secret
      - name: POSTGRES_HOST
        valueFrom:
          secretKeyRef:
            key: postgres_host
            name: configdatamanagement-secret
      - name: POSTGRES_DB
        valueFrom:
          secretKeyRef:
            key: postgres_db
            name: configdatamanagement-secret
      - name: POSTGRES_DB_TEST
        valueFrom:
          secretKeyRef:
            key: postgres_db_test
            name: configdatamanagement-secret
      - name: POSTGRES_PORT
        valueFrom:
          secretKeyRef:
            key: postgres_port
            name: configdatamanagement-secret
      - name: MONGO_HOST
        valueFrom:
          secretKeyRef:
            key: mongo_host
            name: configdatamanagement-secret
      - name: MONGO_PORT
        valueFrom:
          secretKeyRef:
            key: mongo_port
            name: configdatamanagement-secret
      - name: MONGO_DB
        valueFrom:
          secretKeyRef:
            key: mongo_db
            name: configdatamanagement-secret
      - name: MONGO_DB_TEST
        valueFrom:
          secretKeyRef:
            key: mongo_db_test
            name: configdatamanagement-secret
      - name: AZURE_STORAGE_ACCOUNT
        valueFrom:
          secretKeyRef:
            key: azure_storage_account
            name: configdatamanagement-secret
      - name: AZURE_STORAGE_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: azure_storage_access_key
            name: configdatamanagement-secret
      - name: PUBLIC_STORAGE
        value: /data/public-files
      - name: PRIVATE_STORAGE
        value: /data/private-files
      - name: TAXONOMIES_STORAGE
        value: /data/files
      - name: CSV_STORAGE
        value: /data/csv
      image: dwproductioncentralus.azurecr.io/config-data-management-service:298
      imagePullPolicy: Always
      name: configdatamanagementservice
      ports:
      - containerPort: 53001
        protocol: TCP
      - containerPort: 3003
        name: datamanagement
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dwproductionus9082ae7e-auth
    nodeName: aks-nodepool-26707182-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:00:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:00:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:00:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:00:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e12b7e8ecc22d15495f227df9fe760e0f5497d9941cbdf25840460c0d439ea50
      image: dwproductioncentralus.azurecr.io/config-data-management-service:298
      imageID: dwproductioncentralus.azurecr.io/config-data-management-service@sha256:54e8e17b332da9ec480343ea6972faef6188ba94a4b21e3051ec806615f9f64c
      lastState: {}
      name: configdatamanagementservice
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:00:34Z"
    hostIP: 10.240.0.7
    phase: Running
    podIP: 10.240.0.29
    podIPs:
    - ip: 10.240.0.29
    qosClass: Burstable
    startTime: "2021-06-30T06:00:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:01:04Z"
    generateName: dashboardui-77d684b76-
    labels:
      app: dashboardui
      pod-template-hash: 77d684b76
    name: dashboardui-77d684b76-dmpfz
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboardui-77d684b76
      uid: 50db3898-f965-4c71-942c-1bad58f5811e
    resourceVersion: "738633"
    uid: 6a810b73-3a1e-4639-824b-e9c7f592af11
  spec:
    containers:
    - image: dwproductioncentralus.azurecr.io/dashboard-ui:294
      imagePullPolicy: Always
      name: dashboardui
      ports:
      - containerPort: 3000
        name: dashboardui
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dwproductionus9082ae7e-auth
    nodeName: aks-nodepool-26707182-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8aff7efe247cf8c3538f7d2725d36741b2cc1374cc8e267352e1a8d0a370fc4c
      image: dwproductioncentralus.azurecr.io/dashboard-ui:294
      imageID: dwproductioncentralus.azurecr.io/dashboard-ui@sha256:616bed5291febb32d00094afaf3e866966b5b947c6696b0ecc2eaef5a76408c7
      lastState: {}
      name: dashboardui
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:01:05Z"
    hostIP: 10.240.0.7
    phase: Running
    podIP: 10.240.0.20
    podIPs:
    - ip: 10.240.0.20
    qosClass: Burstable
    startTime: "2021-06-30T06:01:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:01:42Z"
    generateName: indexingservice-746b78ff4d-
    labels:
      app: indexingservice
      pod-template-hash: 746b78ff4d
    name: indexingservice-746b78ff4d-wst7g
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: indexingservice-746b78ff4d
      uid: fcebf0e2-d76b-4917-ab69-a4c74351a492
    resourceVersion: "738729"
    uid: f3cb2db6-f7c4-438b-a930-9bb9e5228d2c
  spec:
    containers:
    - env:
      - name: PORT
        value: "1323"
      - name: MONGO_HOST
        value: mongodb
      - name: MONGO_PORT
        value: "27017"
      - name: MONGO_DB
        value: merit
      - name: POSTGRES_PORT
        value: "5432"
      - name: POSTGRES_DB
        value: dataworks
      - name: POSTGRES_HOST
        value: postgres
      - name: POSTGRES_PASSWORD
        value: postgres
      - name: POSTGRES_USER
        value: postgres
      - name: TAXONOMIES_STORAGE
        value: /data/files
      - name: SLACK_HOST
        value: slack-service
      - name: SLACK_PORT
        value: "53007"
      image: dwproductioncentralus.azurecr.io/indexing-service:1.0.13
      imagePullPolicy: IfNotPresent
      name: indexingservice
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /files
        name: public-files
      - mountPath: /private-files
        name: private-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dwproduction8748cee1-auth
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: public-files
      persistentVolumeClaim:
        claimName: public-files
    - name: private-files
      persistentVolumeClaim:
        claimName: private-files
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:01:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5e9b912c18d3005e8ffa89faa19471f6b4da231093a124341602339aa087adf0
      image: dwproductioncentralus.azurecr.io/indexing-service:1.0.13
      imageID: dwproductioncentralus.azurecr.io/indexing-service@sha256:be3c6675f3d27dd5b8d1623f96a0776c7033f46201ef46c11fac0914acfb65ed
      lastState: {}
      name: indexingservice
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:01:43Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.59
    podIPs:
    - ip: 10.240.0.59
    qosClass: Burstable
    startTime: "2021-06-30T06:01:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:02:22Z"
    generateName: jaeger-operator-5c9f6b758b-
    labels:
      name: jaeger-operator
      pod-template-hash: 5c9f6b758b
    name: jaeger-operator-5c9f6b758b-mdpms
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jaeger-operator-5c9f6b758b
      uid: 44888f18-f905-4df4-ada7-6678013d8e80
    resourceVersion: "738826"
    uid: bf5da29b-d4f5-4752-865a-ebe27a82b455
  spec:
    containers:
    - args:
      - start
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OPERATOR_NAME
        value: jaeger-operator
      image: jaegertracing/jaeger-operator:1.22.0
      imagePullPolicy: Always
      name: jaeger-operator
      ports:
      - containerPort: 8383
        name: http-metrics
        protocol: TCP
      - containerPort: 8686
        name: cr-metrics
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: jaeger-operator-token-qkzcz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: jaeger-operator
    serviceAccountName: jaeger-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: jaeger-operator-token-qkzcz
      secret:
        defaultMode: 420
        secretName: jaeger-operator-token-qkzcz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fa7a814edacd3fb32822b261255304ac6bb953f7b1de9cb99ea0eea3e68b8c02
      image: docker.io/jaegertracing/jaeger-operator:1.22.0
      imageID: docker.io/jaegertracing/jaeger-operator@sha256:2d1912108ff7152ef913b8c45aec7eb41ed4c442e54b7b1a55a028b35e2a22cc
      lastState: {}
      name: jaeger-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:02:23Z"
    hostIP: 10.240.0.7
    phase: Running
    podIP: 10.240.0.36
    podIPs:
    - ip: 10.240.0.36
    qosClass: Burstable
    startTime: "2021-06-30T06:02:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T08:22:17Z"
    generateName: job-manager-
    labels:
      app: job-manager
      controller-revision-hash: job-manager-545f6f96bc
      statefulset.kubernetes.io/pod-name: job-manager-0
      tier: dataworks
    name: job-manager-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: job-manager
      uid: bcb33572-36ee-42f4-aca3-547f28aebbf6
    resourceVersion: "753881"
    uid: f5936247-1efd-4c40-a648-58aa6f170b85
  spec:
    containers:
    - env:
      - name: PORT
        value: "3335"
      - name: REDIS_HOST
        value: redis
      - name: REDIS_PORT
        value: "80"
      - name: MAX_QUEUE_BUFFER_COUNT
        value: "2000"
      image: dwproductioncentralus.azurecr.io/jobmanager:v1.0.26.16
      imagePullPolicy: Always
      name: job-manager
      ports:
      - containerPort: 3335
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: job-manager-0
    nodeName: aks-nodepool-26707182-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: job-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:22:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:22:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:22:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:22:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f6eaa447d2ba3bd280a9f672f2ca4ed6ca25dd4bf5599f4838fcd3b961edaf54
      image: dwproductioncentralus.azurecr.io/jobmanager:v1.0.26.16
      imageID: dwproductioncentralus.azurecr.io/jobmanager@sha256:abda190a0cc7a57f90472fc06c69037db5bfdc8bb3a23a5547860fe074b1a65a
      lastState: {}
      name: job-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T08:22:20Z"
    hostIP: 10.240.0.70
    phase: Running
    podIP: 10.240.0.100
    podIPs:
    - ip: 10.240.0.100
    qosClass: Guaranteed
    startTime: "2021-06-30T08:22:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T07:19:19Z"
    generateName: jobfactory-
    labels:
      app: jobfactory
      controller-revision-hash: jobfactory-67bb566c79
      statefulset.kubernetes.io/pod-name: jobfactory-0
      tier: dataworks
    name: jobfactory-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: jobfactory
      uid: 639aca41-8139-4a59-86f3-7051ade5db82
    resourceVersion: "747133"
    uid: b4caa579-dc38-4ada-a95e-e840f00318b7
  spec:
    containers:
    - env:
      - name: HTTP_PORT
        value: "3334"
      - name: GRPC_PORT
        value: "53334"
      - name: MONGO_HOST
        value: mongodb
      - name: MONGO_PORT
        value: "27017"
      - name: MONGO_DB
        value: merit
      - name: PULSAR_HOST
        value: pulsar:6650
      - name: DASHBOARD_HOST
        value: meritdashboard
      - name: OUTPUT_STORAGE
        value: /data/csv
      - name: FILE_SHARE
        value: /data/files
      - name: CACHE_STORAGE
        value: /data/cache
      - name: OUTPUT_FACTORY_HOST
        value: http://outputfactory
      - name: REDIS_HOST
        value: redis
      - name: REDIS_PORT
        value: "80"
      - name: REDIS_EXPIRATION
        value: "1440"
      - name: DATA_MANAGEMENT_SERVICE
        value: http://configdatamanagementservice
      - name: CRUD_SERVICE
        value: configdatamanagementservice
      - name: CRUD_PORT
        value: "53001"
      image: dwproductioncentralus.azurecr.io/merit-jobfactory:v1.25.61
      imagePullPolicy: Always
      name: jobfactory
      ports:
      - containerPort: 80
        protocol: TCP
      - containerPort: 53334
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: jobfactory-0
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: jobfactory
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T07:19:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T07:19:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T07:19:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T07:19:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://35659c5a75a1f10f9bc57e2c5b99e1a5bed3178616b2aa50024b0c61a08abded
      image: dwproductioncentralus.azurecr.io/merit-jobfactory:v1.25.61
      imageID: dwproductioncentralus.azurecr.io/merit-jobfactory@sha256:dab7bbda16075ef7d896a149b654b90e8794baaabad1a4849d5417baf4dfa210
      lastState: {}
      name: jobfactory
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T07:19:21Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.40
    podIPs:
    - ip: 10.240.0.40
    qosClass: Burstable
    startTime: "2021-06-30T07:19:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:02:48Z"
    generateName: merit-nginx-gateway-c77b685c4-
    labels:
      app: merit-nginx-gateway
      pod-template-hash: c77b685c4
    name: merit-nginx-gateway-c77b685c4-7lb2w
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: merit-nginx-gateway-c77b685c4
      uid: 676ec178-2010-4f77-b61e-ac2d0e4f7833
    resourceVersion: "738903"
    uid: d311c6af-5c04-4904-8aa2-b8a9896c9db8
  spec:
    containers:
    - image: dwproductioncentralus.azurecr.io/merit-nginx-gateway:v1.07
      imagePullPolicy: IfNotPresent
      name: merit-nginx-gateway
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:02:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://981c25f127b4e77da2595dbd7e3b5ce2eda6d1c18052f7856a035e4ceab4065f
      image: dwproductioncentralus.azurecr.io/merit-nginx-gateway:v1.07
      imageID: dwproductioncentralus.azurecr.io/merit-nginx-gateway@sha256:db452640e131af15da192cea2f04d8ba83d7254f4100e9559c07034b93902869
      lastState: {}
      name: merit-nginx-gateway
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:02:49Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.48
    podIPs:
    - ip: 10.240.0.48
    qosClass: Burstable
    startTime: "2021-06-30T06:02:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: mongo-
    labels:
      app: mongodb
      controller-revision-hash: mongo-776bc5788d
      statefulset.kubernetes.io/pod-name: mongo-0
      tier: dataworks
    name: mongo-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: mongo
      uid: ca4a6b13-0631-4722-bdf3-8a82a57efece
    resourceVersion: "762011"
    uid: 96f4e21a-05ba-415c-8f43-411043360f83
  spec:
    containers:
    - env:
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      image: mongo
      imagePullPolicy: Always
      name: mongodb
      ports:
      - containerPort: 27017
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/db
        name: mongodb-data
      - mountPath: /restored
        name: mongodb-data-restore
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: mongo-0
    initContainers:
    - command:
      - chown
      - -R
      - 0999:0999
      - /data/db
      image: busybox
      imagePullPolicy: Always
      name: volume-permissions
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/db
        name: mongodb-data
      - mountPath: /restored
        name: mongodb-data-restore
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    nodeName: aks-nodepool-26707182-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: mongodb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: mongodb-data
      persistentVolumeClaim:
        claimName: mongodb-data
    - name: mongodb-data-restore
      persistentVolumeClaim:
        claimName: mongodb-data-restore
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://10537f6ec190d14944a218b1cb5e906c1117a4a85c6b67433dad3a381e43c9bb
      image: docker.io/library/mongo:latest
      imageID: docker.io/library/mongo@sha256:fe44eb6a2ea2bb1548718ec05eb9cb165f1bded37595ebea507bddc413ab99ae
      lastState: {}
      name: mongodb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:40:22Z"
    hostIP: 10.240.0.101
    initContainerStatuses:
    - containerID: containerd://016865ecfc39bf1b04d32de26f66db3097a1781fe23c70711cbf4eb705c8ac13
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:930490f97e5b921535c153e0e7110d251134cc4b72bbb8133c6a5065cc68580d
      lastState: {}
      name: volume-permissions
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://016865ecfc39bf1b04d32de26f66db3097a1781fe23c70711cbf4eb705c8ac13
          exitCode: 0
          finishedAt: "2021-06-30T09:39:52Z"
          reason: Completed
          startedAt: "2021-06-30T09:39:52Z"
    phase: Running
    podIP: 10.240.0.112
    podIPs:
    - ip: 10.240.0.112
    qosClass: Burstable
    startTime: "2021-06-30T09:39:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:03:13Z"
    generateName: nginx-gateway-76c488797f-
    labels:
      app: nginx-gateway
      pod-template-hash: 76c488797f
    name: nginx-gateway-76c488797f-5h89j
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-gateway-76c488797f
      uid: 9c213b7d-ad6a-470e-8886-d351f6aa3c24
    resourceVersion: "738973"
    uid: 99964664-122e-4b94-aaad-da1caf663b1a
  spec:
    containers:
    - image: dwproductioncentralus.azurecr.io/nginx-gateway:v1.0.24
      imagePullPolicy: IfNotPresent
      name: nginx-gateway
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:03:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:03:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:03:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:03:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2a739a7cd6012dffda23280a348c6ebe42b47a04e3975f294dcd6e7618b05e8b
      image: dwproductioncentralus.azurecr.io/nginx-gateway:v1.0.24
      imageID: dwproductioncentralus.azurecr.io/nginx-gateway@sha256:f341851dcaa32f33bac51ac47dd385574bb52768c5fac40841fdccfd8b0bd594
      lastState: {}
      name: nginx-gateway
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:03:14Z"
    hostIP: 10.240.0.7
    phase: Running
    podIP: 10.240.0.8
    podIPs:
    - ip: 10.240.0.8
    qosClass: Burstable
    startTime: "2021-06-30T06:03:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: notification-service-
    labels:
      app: notification-service
      controller-revision-hash: notification-service-5d8744b6b5
      statefulset.kubernetes.io/pod-name: notification-service-0
      tier: dataworks
    name: notification-service-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: notification-service
      uid: c81931b8-0d30-4c20-b694-cec00f5b236e
    resourceVersion: "761958"
    uid: 0e547e7b-2839-4993-9b69-601f52f7e1d2
  spec:
    containers:
    - env:
      - name: PORT
        value: "1323"
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: postgres
      - name: POSTGRES_HOST
        value: postgres
      - name: POSTGRES_DB
        value: dataworks
      - name: POSTGRES_PORT
        value: "5432"
      image: dwproductioncentralus.azurecr.io/notification-service:1.0.9
      imagePullPolicy: Always
      name: notification-service
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: notification-service-0
    nodeName: aks-nodepool-26707182-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: notification-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ba937b6fd5377d0a75b0e435c18ef196f1890ede6214da68c8dff9d50482fa82
      image: dwproductioncentralus.azurecr.io/notification-service:1.0.9
      imageID: dwproductioncentralus.azurecr.io/notification-service@sha256:05280cb8eb881910034ca768ef0ed12802a58ee58da0b0debcd8123f89b25bbc
      lastState: {}
      name: notification-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:40:07Z"
    hostIP: 10.240.0.70
    phase: Running
    podIP: 10.240.0.71
    podIPs:
    - ip: 10.240.0.71
    qosClass: Guaranteed
    startTime: "2021-06-30T09:39:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T05:49:35Z"
    generateName: outputfactory-7f7f465b86-
    labels:
      app: outputfactory
      pod-template-hash: 7f7f465b86
      tier: dataworks
    name: outputfactory-7f7f465b86-p9rpn
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: outputfactory-7f7f465b86
      uid: 86728b05-1f7e-4e0e-8b7d-7adf134b4f97
    resourceVersion: "737443"
    uid: 6d126a85-03e1-4671-b1f7-a0d1c1180401
  spec:
    containers:
    - env:
      - name: OUTPUT_STORAGE
        value: /data/csv
      - name: PORT
        value: "3003"
      - name: AZURE_STORAGE_ACCOUNT
        value: dwlakeus
      - name: AZURE_STORAGE_ACCESS_KEY
        value: k05kfHslesebGP5mcrF/1zigyYv5Nz+RFhVwROhtDMixSQbPMivZQibbiBjattMpizQH4LU9d04HOcB32hI+lQ==
      - name: REDIS_HOST
        value: redis
      - name: REDIS_PORT
        value: "80"
      image: dwproductioncentralus.azurecr.io/outputfactory:v1.48.16
      imagePullPolicy: Always
      name: outputfactory
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:49:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:49:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:49:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T05:49:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f6c53ca90f4780b97b10d0bfb57edbd0778f787845d1687d0c923c824a9098bd
      image: dwproductioncentralus.azurecr.io/outputfactory:v1.48.16
      imageID: dwproductioncentralus.azurecr.io/outputfactory@sha256:321ad72562138e655163d06149f137d2edca73e9d0d52fecbdf8c661cc4f537a
      lastState: {}
      name: outputfactory
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T05:49:37Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.68
    podIPs:
    - ip: 10.240.0.68
    qosClass: Burstable
    startTime: "2021-06-30T05:49:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:58:27Z"
    generateName: postgres-
    labels:
      app: postgres
      controller-revision-hash: postgres-58dc599c66
      statefulset.kubernetes.io/pod-name: postgres-0
      tier: dataworks
    name: postgres-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: postgres
      uid: e578a2c5-725a-44c8-b387-0bb01c490fa5
    resourceVersion: "1289884"
    uid: 7e1ae325-9ecc-491c-a1e2-cf1d3ea62d4c
  spec:
    containers:
    - env:
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_HOST
        value: postgres
      - name: POSTGRES_DB
        value: dataworks
      - name: POSTGRES_PASSWORD
        value: postgres
      - name: PGDATA
        value: /var/lib/postgresql/data/pgdata
      image: postgres:11.8-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - exec pg_isready -U postgres
        failureThreshold: 6
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgres
      ports:
      - containerPort: 5432
        name: postgres
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - exec pg_isready -U postgres
        failureThreshold: 3
        initialDelaySeconds: 50
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 2000Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-data-disk
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: postgres-0
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: postgres
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureDisk:
        cachingMode: ReadWrite
        diskName: postgres-pvc
        diskURI: /subscriptions/6310f5e0-79d6-42a5-9e74-2628a74679aa/resourceGroups/MC_DWProductionUS_DWProdUS_centralus/providers/Microsoft.Compute/disks/postgres-pvc
        fsType: ext4
        kind: Managed
        readOnly: false
      name: postgres-data-disk
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:58:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-07-02T12:33:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-07-02T12:33:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:58:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://48b07cc2b267309bdc953fde979a9daab67127c1b0d7d08ee66d7b0b791141be
      image: docker.io/library/postgres:11.8-alpine
      imageID: docker.io/library/postgres@sha256:fed26d3b33ed6c29437d1afaf483a60bf39c10f878e7ae5662436862e743e3b0
      lastState:
        terminated:
          containerID: containerd://1fb3bb6a2323e29a10b6d19612424be3e2366ebd204b16aea940e7883e4c5525
          exitCode: 137
          finishedAt: "2021-07-02T12:32:49Z"
          reason: OOMKilled
          startedAt: "2021-07-01T12:04:59Z"
      name: postgres
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2021-07-02T12:32:49Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.51
    podIPs:
    - ip: 10.240.0.51
    qosClass: Burstable
    startTime: "2021-06-30T06:58:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:04:19Z"
    generateName: redis-85d987f9bb-
    labels:
      app: redis
      pod-template-hash: 85d987f9bb
    name: redis-85d987f9bb-76rwl
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-85d987f9bb
      uid: b791c097-916b-4212-a7f7-04d20afd70aa
    resourceVersion: "739128"
    uid: c989da71-74e7-47c8-8b22-bfc56727626f
  spec:
    containers:
    - image: redis
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:04:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:04:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:04:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:04:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f0c2f670cd72d43e2136c9e9462aca6fc7e6229f86d677d8b82ed4da0dd69ef7
      image: docker.io/library/redis:latest
      imageID: docker.io/library/redis@sha256:7c540ceff53f0522f6b1c264d8142df08316173d103586ddf51ed91ca49deec8
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:04:20Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.62
    podIPs:
    - ip: 10.240.0.62
    qosClass: Burstable
    startTime: "2021-06-30T06:04:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: reminder-service-
    labels:
      app: reminder-service
      controller-revision-hash: reminder-service-7b766f756d
      statefulset.kubernetes.io/pod-name: reminder-service-0
      tier: dataworks
    name: reminder-service-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: reminder-service
      uid: 7018c557-c715-4cdd-ad25-9dfa3e7368db
    resourceVersion: "761904"
    uid: be361632-9ed8-489c-b5e2-675f65f652d0
  spec:
    containers:
    - env:
      - name: PORT
        value: "1323"
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: postgres
      - name: POSTGRES_HOST
        value: postgres
      - name: POSTGRES_DB
        value: dataworks
      - name: POSTGRES_PORT
        value: "5432"
      image: dwproductioncentralus.azurecr.io/reminder-service:1.0.1
      imagePullPolicy: Always
      name: reminder-service
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: reminder-service-0
    nodeName: aks-nodepool-26707182-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: notification-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f9d9a2d8269ecc2ac14da71d4973d57716f427e91ff9d537798a47427454011d
      image: dwproductioncentralus.azurecr.io/reminder-service:1.0.1
      imageID: dwproductioncentralus.azurecr.io/reminder-service@sha256:2c24cb14f7e8ee731a4c7054e5a575bae8605bd971db1ba26e8975aa8e5473f6
      lastState: {}
      name: reminder-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:39:49Z"
    hostIP: 10.240.0.101
    phase: Running
    podIP: 10.240.0.108
    podIPs:
    - ip: 10.240.0.108
    qosClass: Guaranteed
    startTime: "2021-06-30T09:39:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: scheduler-
    labels:
      app: scheduler
      controller-revision-hash: scheduler-7f48687cb9
      statefulset.kubernetes.io/pod-name: scheduler-0
      tier: dataworks
    name: scheduler-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: scheduler
      uid: c093fde7-602b-421b-b25a-8a020cc73564
    resourceVersion: "761976"
    uid: 8e7fa0cf-fdac-4dfb-8137-b6f2a47ec605
  spec:
    containers:
    - env:
      - name: PORT
        value: "3005"
      - name: GRPC_CRUD_SERVICE
        value: configdatamanagementservice
      - name: GRPC_CRUD_PORT
        value: "53001"
      - name: GRPC_JOBFACTORY_SERVICE
        value: jobfactory
      - name: GRPC_JOBFACTORY_PORT
        value: "53334"
      - name: REDIS_HOST
        value: redis
      - name: REDIS_PORT
        value: "80"
      - name: INDEXING_SERVICE
        value: indexingservice
      - name: INDEXING_PORT
        value: "51323"
      image: dwproductioncentralus.azurecr.io/scheduler:1.0.17
      imagePullPolicy: Always
      name: scheduler
      ports:
      - containerPort: 3334
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: scheduler-0
    nodeName: aks-nodepool-26707182-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: scheduler
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d2a3c50eccc3f1e93b7917f2275496e39df8254cb0de21b252a1fc0f88520154
      image: dwproductioncentralus.azurecr.io/scheduler:1.0.17
      imageID: dwproductioncentralus.azurecr.io/scheduler@sha256:a27f9825a2b5ca7a0f3b1c0bce57c1199d7bb262fa49a1b8c8d067203516419f
      lastState: {}
      name: scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:40:09Z"
    hostIP: 10.240.0.70
    phase: Running
    podIP: 10.240.0.96
    podIPs:
    - ip: 10.240.0.96
    qosClass: Guaranteed
    startTime: "2021-06-30T09:39:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:04:59Z"
    generateName: schedulerservice-54975696f5-
    labels:
      app: schedulerservice
      pod-template-hash: 54975696f5
      tier: dataworks
    name: schedulerservice-54975696f5-d96fs
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: schedulerservice-54975696f5
      uid: 8a19890f-5355-41d0-9d1f-422c4e7c5cc3
    resourceVersion: "739216"
    uid: 2b8f412e-b9f1-4cbc-ba59-6ce73b8b3102
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: schedulerservice
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:04:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:04:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://71bdafe049bea398119be5b30580f091d4fd8f81399737fcdf435fa4c5b830dc
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:47ae43cdfc7064d28800bc42e79a429540c7c80168e8c8952778c0d5af1c09db
      lastState: {}
      name: schedulerservice
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:05:00Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.55
    podIPs:
    - ip: 10.240.0.55
    qosClass: Burstable
    startTime: "2021-06-30T06:04:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: script-service-
    labels:
      app: script-service
      controller-revision-hash: script-service-64f768fdff
      statefulset.kubernetes.io/pod-name: script-service-0
      tier: dataworks
    name: script-service-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: script-service
      uid: 7afb35b7-703d-4b5a-ba70-69cb868a34d5
    resourceVersion: "761981"
    uid: bf08ae4b-39a2-4b7d-8109-dfa61d55725f
  spec:
    containers:
    - env:
      - name: FLASK_PORT
        value: "5000"
      - name: PG_HOST
        value: localhost
      - name: PG_PORT
        value: "5432"
      - name: PG_DB
        value: postgres
      - name: PG_USER
        value: postgres
      - name: PG_PASS
        value: postgres
      - name: FILE_PATH
        value: /data/csv
      - name: CRUD_SERVICE
        value: http://configdatamanagementservice
      image: dwproductioncentralus.azurecr.io/script-service:1.0.22
      imagePullPolicy: Always
      name: script-service
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: script-service-0
    nodeName: aks-nodepool-26707182-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: script-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:40:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6484f782f46a7d4314cb72b31a33719be4b6c074710ced98b9427044834feed5
      image: dwproductioncentralus.azurecr.io/script-service:1.0.22
      imageID: dwproductioncentralus.azurecr.io/script-service@sha256:4c7e8a203a91af94c112ca555377100d6e68b0a701646ae23fa43f68e83a67fa
      lastState: {}
      name: script-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:40:09Z"
    hostIP: 10.240.0.101
    phase: Running
    podIP: 10.240.0.113
    podIPs:
    - ip: 10.240.0.113
    qosClass: Guaranteed
    startTime: "2021-06-30T09:39:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:05:22Z"
    generateName: slack-service-66bfd77876-
    labels:
      app: slack-service
      pod-template-hash: 66bfd77876
    name: slack-service-66bfd77876-b7ltr
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: slack-service-66bfd77876
      uid: 948e2e9c-6f59-4716-9895-d296612ac83e
    resourceVersion: "739281"
    uid: 59f7529d-26bc-42cc-a1d6-b369f1bcfb4c
  spec:
    containers:
    - env:
      - name: PORT
        value: "1323"
      image: dwproductioncentralus.azurecr.io/slack-service:1.0.1
      imagePullPolicy: IfNotPresent
      name: slack-service
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /files
        name: public-files
      - mountPath: /private-files
        name: private-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dwproduction8748cee1-auth
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: public-files
      persistentVolumeClaim:
        claimName: public-files
    - name: private-files
      persistentVolumeClaim:
        claimName: private-files
    - azureFile:
        secretName: dwk8sdatastorage-secret
        shareName: data
      name: data
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d42ccf6dd0341a1bf2bb53c3d4c299ab05b5100175b0cabf9524be794cbd6a19
      image: dwproductioncentralus.azurecr.io/slack-service:1.0.1
      imageID: dwproductioncentralus.azurecr.io/slack-service@sha256:6fc30a9a465215b1a65eebbe920d25ba4dd80d224c6200f5d1188554e63a4323
      lastState: {}
      name: slack-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:05:23Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.42
    podIPs:
    - ip: 10.240.0.42
    qosClass: Burstable
    startTime: "2021-06-30T06:05:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:05:49Z"
    generateName: statsservice-b4df77fc5-
    labels:
      app: statsservice
      pod-template-hash: b4df77fc5
      tier: dataworks
    name: statsservice-b4df77fc5-2295p
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: statsservice-b4df77fc5
      uid: bd032ac8-dccb-4267-8520-4952e9c4d06c
    resourceVersion: "739365"
    uid: ec9c1ccc-b9fc-4aac-acf0-6f12d0a2508b
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        value: redis
      - name: REDIS_PORT
        value: "80"
      - name: CRUD_SERVICE
        value: configdatamanagementservice
      - name: CRUD_PORT
        value: "53001"
      image: dwproductioncentralus.azurecr.io/statsservice:v1.0.66
      imagePullPolicy: Always
      name: statsservice
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:05:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://83cd128778978da7b0b71937d88e737103bdeb811187c4c79bceb77198a4fcd7
      image: dwproductioncentralus.azurecr.io/statsservice:v1.0.66
      imageID: dwproductioncentralus.azurecr.io/statsservice@sha256:72dbeb3de5ea9d0f7f778853aec9e893fbf151e204f571e9bb3d8ba323f4ab53
      lastState: {}
      name: statsservice
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:05:51Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.57
    podIPs:
    - ip: 10.240.0.57
    qosClass: Burstable
    startTime: "2021-06-30T06:05:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T06:06:14Z"
    generateName: testingservice-585d4d7c89-
    labels:
      app: testingservice
      pod-template-hash: 585d4d7c89
      tier: dataworks
    name: testingservice-585d4d7c89-r9bwc
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: testingservice-585d4d7c89
      uid: 12ffae56-91cc-4212-b983-5c4c7c051533
    resourceVersion: "739432"
    uid: 77247499-00e9-4ad4-a78c-90d1e1919111
  spec:
    containers:
    - env:
      - name: MONGO_HOST
        value: mongodb
      - name: pulsar_url
        value: pulsar
      - name: CAPTCHA_SERVICE
        value: captcha-solver
      - name: CAPTCHA_PORT
        value: "80"
      image: dwproductioncentralus.azurecr.io/merit-ext-test-serv:v1.69
      imagePullPolicy: Always
      name: testingservice
      resources:
        limits:
          cpu: "2"
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:06:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:06:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:06:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T06:06:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7683c254df2cc97016d4e0138f137d96ac8febcb19ea1b981ff9573ea4980a73
      image: dwproductioncentralus.azurecr.io/merit-ext-test-serv:v1.69
      imageID: dwproductioncentralus.azurecr.io/merit-ext-test-serv@sha256:1778b7128bd26c46db98c6bd16261b5356165d08979cb6f3a978c6c27c79f10a
      lastState: {}
      name: testingservice
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T06:06:16Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.64
    podIPs:
    - ip: 10.240.0.64
    qosClass: Burstable
    startTime: "2021-06-30T06:06:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T08:18:37Z"
    generateName: weaveworks-
    labels:
      app: weaveworks
      controller-revision-hash: weaveworks-6d585f5854
      statefulset.kubernetes.io/pod-name: weaveworks-0
      tier: dataworks
    name: weaveworks-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: weaveworks
      uid: ba47800f-031c-4c9c-89d6-a10abbb1bf65
    resourceVersion: "753454"
    uid: e0c7c3cb-e9e4-46d6-a86a-d5e289932815
  spec:
    containers:
    - args:
      - --mode=app
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: weaveworks
      ports:
      - containerPort: 4040
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: weaveworks-0
    nodeName: virtual-node-aci-linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: weaveworks
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:19:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:18:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:18:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: aci://5dce8e430b2f68747948356301b028535a5145fd361205d83f0e13fdd44424f3
      image: docker.io/weaveworks/scope:1.13.0
      imageID: ""
      lastState:
        waiting:
          reason: Creating
      name: weaveworks
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2021-06-30T08:19:33Z"
    phase: Running
    podIP: 10.241.0.4
    podIPs:
    - ip: 10.241.0.4
    startTime: "2021-06-30T08:19:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-29T19:02:07Z"
    generateName: weaveworks-agent-
    labels:
      app: weaveworks-agent
      controller-revision-hash: 78f76ccb96
      pod-template-generation: "1"
      tier: dataworks
    name: weaveworks-agent-5r8lx
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weaveworks-agent
      uid: 123d58af-471c-4d5b-91a0-277ffd67522e
    resourceVersion: "675905"
    uid: 1869b2ed-210c-450f-9ed3-fd28fe718205
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool-26707182-vmss000006
    containers:
    - args:
      - --mode=probe
      - --probe-only
      - --probe.kubernetes.role=host
      - --probe.publish.interval=4500ms
      - --probe.spy.interval=2s
      - --probe.docker.bridge=docker0
      - --probe.docker=true
      - weaveworks.dataworks.svc.cluster.local:80
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: weaveworks-agent
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/scope/plugins
        name: scope-plugins
      - mountPath: /sys/kernel/debug
        name: sys-kernel-debug
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/scope/plugins
        type: ""
      name: scope-plugins
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: sys-kernel-debug
    - hostPath:
        path: /var/run/docker.sock
        type: ""
      name: docker-socket
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:02:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:02:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:02:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:02:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2e0a61dc7a87da3dbe774fb6bec5245c7764317303f2685cbb4728a8d181409a
      image: docker.io/weaveworks/scope:1.13.0
      imageID: docker.io/weaveworks/scope@sha256:bd1e367e2600c7064abdd3707734fb434f1cdde40331d912a45786b0f77bdbb6
      lastState: {}
      name: weaveworks-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-29T19:02:23Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.39
    podIPs:
    - ip: 10.240.0.39
    qosClass: Burstable
    startTime: "2021-06-29T19:02:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: weaveworks-agent-
    labels:
      app: weaveworks-agent
      controller-revision-hash: 78f76ccb96
      pod-template-generation: "1"
      tier: dataworks
    name: weaveworks-agent-8xzbk
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weaveworks-agent
      uid: 123d58af-471c-4d5b-91a0-277ffd67522e
    resourceVersion: "761875"
    uid: e6a2413e-32fd-4142-81ac-189e132ce567
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - virtual-node-aci-linux
    containers:
    - args:
      - --mode=probe
      - --probe-only
      - --probe.kubernetes.role=host
      - --probe.publish.interval=4500ms
      - --probe.spy.interval=2s
      - --probe.docker.bridge=docker0
      - --probe.docker=true
      - weaveworks.dataworks.svc.cluster.local:80
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: weaveworks-agent
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/scope/plugins
        name: scope-plugins
      - mountPath: /sys/kernel/debug
        name: sys-kernel-debug
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: virtual-node-aci-linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/scope/plugins
        type: ""
      name: scope-plugins
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: sys-kernel-debug
    - hostPath:
        path: /var/run/docker.sock
        type: ""
      name: docker-socket
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    message: Pod weaveworks-agent-8xzbk requires volume scope-plugins which is of
      an unsupported type
    phase: Pending
    qosClass: Burstable
    reason: ProviderFailed
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-29T19:01:57Z"
    generateName: weaveworks-agent-
    labels:
      app: weaveworks-agent
      controller-revision-hash: 78f76ccb96
      pod-template-generation: "1"
      tier: dataworks
    name: weaveworks-agent-dggbc
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weaveworks-agent
      uid: 123d58af-471c-4d5b-91a0-277ffd67522e
    resourceVersion: "675814"
    uid: 0320be35-180d-451f-8252-f57a36cd3558
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool-26707182-vmss000000
    containers:
    - args:
      - --mode=probe
      - --probe-only
      - --probe.kubernetes.role=host
      - --probe.publish.interval=4500ms
      - --probe.spy.interval=2s
      - --probe.docker.bridge=docker0
      - --probe.docker=true
      - weaveworks.dataworks.svc.cluster.local:80
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: weaveworks-agent
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/scope/plugins
        name: scope-plugins
      - mountPath: /sys/kernel/debug
        name: sys-kernel-debug
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: aks-nodepool-26707182-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/scope/plugins
        type: ""
      name: scope-plugins
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: sys-kernel-debug
    - hostPath:
        path: /var/run/docker.sock
        type: ""
      name: docker-socket
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fe2748364ae20c30e312130eb496599fd461f75759c1e222f9f896fc38414a41
      image: docker.io/weaveworks/scope:1.13.0
      imageID: docker.io/weaveworks/scope@sha256:bd1e367e2600c7064abdd3707734fb434f1cdde40331d912a45786b0f77bdbb6
      lastState: {}
      name: weaveworks-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-29T19:01:58Z"
    hostIP: 10.240.0.7
    phase: Running
    podIP: 10.240.0.7
    podIPs:
    - ip: 10.240.0.7
    qosClass: Burstable
    startTime: "2021-06-29T19:01:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T08:19:42Z"
    generateName: weaveworks-agent-
    labels:
      app: weaveworks-agent
      controller-revision-hash: 78f76ccb96
      pod-template-generation: "1"
      tier: dataworks
    name: weaveworks-agent-grhmb
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weaveworks-agent
      uid: 123d58af-471c-4d5b-91a0-277ffd67522e
    resourceVersion: "753575"
    uid: d1f503cd-179f-46be-aec9-a37e52eb54d6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool-26707182-vmss000007
    containers:
    - args:
      - --mode=probe
      - --probe-only
      - --probe.kubernetes.role=host
      - --probe.publish.interval=4500ms
      - --probe.spy.interval=2s
      - --probe.docker.bridge=docker0
      - --probe.docker=true
      - weaveworks.dataworks.svc.cluster.local:80
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: weaveworks-agent
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/scope/plugins
        name: scope-plugins
      - mountPath: /sys/kernel/debug
        name: sys-kernel-debug
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: aks-nodepool-26707182-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/scope/plugins
        type: ""
      name: scope-plugins
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: sys-kernel-debug
    - hostPath:
        path: /var/run/docker.sock
        type: ""
      name: docker-socket
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:19:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:19:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:19:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T08:19:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://78f35ec74834513399e31b9b2e3d9c8b47bf60cf33be767d121c201a3147e7a8
      image: docker.io/weaveworks/scope:1.13.0
      imageID: docker.io/weaveworks/scope@sha256:bd1e367e2600c7064abdd3707734fb434f1cdde40331d912a45786b0f77bdbb6
      lastState: {}
      name: weaveworks-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T08:19:52Z"
    hostIP: 10.240.0.70
    phase: Running
    podIP: 10.240.0.70
    podIPs:
    - ip: 10.240.0.70
    qosClass: Burstable
    startTime: "2021-06-30T08:19:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:38:19Z"
    generateName: weaveworks-agent-
    labels:
      app: weaveworks-agent
      controller-revision-hash: 78f76ccb96
      pod-template-generation: "1"
      tier: dataworks
    name: weaveworks-agent-zvw46
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weaveworks-agent
      uid: 123d58af-471c-4d5b-91a0-277ffd67522e
    resourceVersion: "761653"
    uid: 23dce465-6be2-4af0-be57-2fecae0d67c1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool-26707182-vmss000008
    containers:
    - args:
      - --mode=probe
      - --probe-only
      - --probe.kubernetes.role=host
      - --probe.publish.interval=4500ms
      - --probe.spy.interval=2s
      - --probe.docker.bridge=docker0
      - --probe.docker=true
      - weaveworks.dataworks.svc.cluster.local:80
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: weaveworks-agent
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/scope/plugins
        name: scope-plugins
      - mountPath: /sys/kernel/debug
        name: sys-kernel-debug
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: aks-nodepool-26707182-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/scope/plugins
        type: ""
      name: scope-plugins
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: sys-kernel-debug
    - hostPath:
        path: /var/run/docker.sock
        type: ""
      name: docker-socket
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:38:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:38:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:38:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:38:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://59fec5ccb24d04ed1a2f78e7c7244380a1bb7bbd0c99e9f0e7c938bba18f2a85
      image: docker.io/weaveworks/scope:1.13.0
      imageID: docker.io/weaveworks/scope@sha256:bd1e367e2600c7064abdd3707734fb434f1cdde40331d912a45786b0f77bdbb6
      lastState: {}
      name: weaveworks-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:38:36Z"
    hostIP: 10.240.0.101
    phase: Running
    podIP: 10.240.0.101
    podIPs:
    - ip: 10.240.0.101
    qosClass: Burstable
    startTime: "2021-06-30T09:38:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-29T19:01:30Z"
    generateName: weaveworks-cluster-agent-
    labels:
      app: weaveworks-cluster-agent
      controller-revision-hash: weaveworks-cluster-agent-7548f9c5bf
      statefulset.kubernetes.io/pod-name: weaveworks-cluster-agent-0
      tier: dataworks
    name: weaveworks-cluster-agent-0
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: weaveworks-cluster-agent
      uid: f2db3c02-630d-4d7e-9d04-f20d8671db02
    resourceVersion: "675742"
    uid: d619ea68-2e2a-4d8b-8ff7-984138b06dd1
  spec:
    containers:
    - args:
      - --mode=probe
      - --probe-only
      - --probe.kubernetes.role=cluster
      - --probe.http.listen=:4041
      - --probe.publish.interval=4500ms
      - --probe.spy.interval=2s
      - weaveworks.dataworks.svc.cluster.local:80
      command:
      - /home/weave/scope
      image: docker.io/weaveworks/scope:1.13.0
      imagePullPolicy: IfNotPresent
      name: scope-cluster-agent
      ports:
      - containerPort: 4041
        protocol: TCP
      resources:
        requests:
          cpu: 25m
          memory: 80Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weaveworks-token-lk8wl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: weaveworks-cluster-agent-0
    nodeName: aks-nodepool-26707182-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: weaveworks
    serviceAccountName: weaveworks
    subdomain: weaveworks-cluster-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: weaveworks-token-lk8wl
      secret:
        defaultMode: 420
        secretName: weaveworks-token-lk8wl
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-29T19:01:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://975b34b0eaba666313320b13c6bf4e35d5cb992fbfbc93e3be6052e738ba022f
      image: docker.io/weaveworks/scope:1.13.0
      imageID: docker.io/weaveworks/scope@sha256:bd1e367e2600c7064abdd3707734fb434f1cdde40331d912a45786b0f77bdbb6
      lastState: {}
      name: scope-cluster-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-29T19:01:44Z"
    hostIP: 10.240.0.39
    phase: Running
    podIP: 10.240.0.44
    podIPs:
    - ip: 10.240.0.44
    qosClass: Burstable
    startTime: "2021-06-29T19:01:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-30T09:39:46Z"
    generateName: ws-service-5f9cf8d6c7-
    labels:
      app: ws-service
      pod-template-hash: 5f9cf8d6c7
      tier: dataworks
    name: ws-service-5f9cf8d6c7-l5xrg
    namespace: dataworks
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ws-service-5f9cf8d6c7
      uid: 8dabe6fd-3641-43ae-b3f3-e0d6c916f5c0
    resourceVersion: "761913"
    uid: dcea3356-0c84-4510-b069-ffdd3961c31f
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        value: redis
      - name: REDIS_PORT
        value: "80"
      - name: CRUD_SERVICE
        value: configdatamanagementservice
      - name: CRUD_PORT
        value: "53001"
      image: dwproductioncentralus.azurecr.io/ws-service:v1.0.14
      imagePullPolicy: Always
      name: ws-service
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-r46q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool-26707182-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: default-token-r46q5
      secret:
        defaultMode: 420
        secretName: default-token-r46q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-30T09:39:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b33a71af3b54e1b9d7ace47f00287d26836841209fda60212c0d2c42b840c644
      image: dwproductioncentralus.azurecr.io/ws-service:v1.0.14
      imageID: dwproductioncentralus.azurecr.io/ws-service@sha256:bba76ad94908337a7f2eea368099679856629d0cb46e3beea35131c31fc1222c
      lastState: {}
      name: ws-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-30T09:39:51Z"
    hostIP: 10.240.0.101
    phase: Running
    podIP: 10.240.0.125
    podIPs:
    - ip: 10.240.0.125
    qosClass: Burstable
    startTime: "2021-06-30T09:39:46Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
