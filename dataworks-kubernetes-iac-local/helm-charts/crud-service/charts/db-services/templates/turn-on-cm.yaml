apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-turn-on
data:
  turn-on.sh: |-
    #!/bin/bash
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    mv kubectl /usr/local/bin/
    JQ=/usr/bin/jq
    curl https://stedolan.github.io/jq/download/linux64/jq > $JQ && chmod +x $JQ
    ls -la $JQ
    echo " "
    #kubectl scale sts web --replicas=1 -n scale-script
    kubectl scale sts postgres --replicas=1 -n dataworks-app
    kubectl scale sts redis-master --replicas=1 -n dataworks-app
    kubectl scale deploy mongodb --replicas=1 -n dataworks-app
    while [[ $(kubectl get sts postgres -n dataworks-app -ojson | $JQ '.status.readyReplicas') -ne 1 ]]
    do
      echo "Waiting for Postgres to get ready..."
      sleep 10
    done
    echo "Postgres Up.."
    while [[ $(kubectl get sts redis-master -n dataworks-app -ojson | $JQ '.status.readyReplicas') -ne 1 ]]
    do
      echo "Waiting for Redis to get ready..."
      sleep 10
    done
    echo "Redis Up.."
    kubectl scale deploy ws-service --replicas=1 -n dataworks-app
    kubectl scale deploy config-data-management --replicas=1 -n dataworks-app
    #kubectl scale sts meritdashboard --replicas=1 -n dataworks-app
    sleep 5
