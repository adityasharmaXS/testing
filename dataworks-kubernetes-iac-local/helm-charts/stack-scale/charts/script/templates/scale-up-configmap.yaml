apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-scale-up
data:
  scale_up.sh: |-
    #!/bin/bash
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    mv kubectl /usr/local/bin/
    echo " "
    File1="deploy.txt"
    File2="sts.txt"
    kubectl get deploy -n scale-script | grep -v 'scale\|stack'| awk 'NR>1{print $1}' > deploy.txt
    kubectl get sts -n scale-script | grep -v 'scale\|stack' | awk 'NR>1{print $1}' > sts.txt
    lines=$(cat $File1)
    sts_lines=$(cat $File2)
    echo " "
    if [ -s "$File1" ]
    then
      for i in $lines
      do
        kubectl scale deploy $i --replicas=1 -n scale-script
      done
    else
      echo "No deployment found"
    fi
    if [ -s "$File2" ]
    then
      for j in $sts_lines
      do
        kubectl scale sts $j --replicas=1 -n scale-script
      done
    else
      echo "No sts found"
    fi
    echo " "
    File3="deploy-moni.txt"
    File4="sts-moni.txt"
    kubectl get deploy -n monitoring | grep -v 'jae\|pro\|mon\|elast' | awk 'NR>1{print $1}' > deploy-moni.txt
    kubectl get sts -n monitoring | grep -v 'jae\|pro\|mon\|elast' | awk 'NR>1{print $1}' > sts-moni.txt
    lines2=$(cat $File3)
    sts_lines2=$(cat $File4)
    if [ -s "$File3" ]
    then
      for i in $lines2
      do
        kubectl scale deploy $i --replicas=1 -n monitoring
      done
    else
      echo "No deployment found"
    fi
    if [ -s "$File4" ]
    then
      for j in $sts_lines2
      do
        kubectl scale sts $j --replicas=1 -n monitoring
      done
    else
      echo "No sts found"
    fi
    echo " "
    File5="deploy-dwa.txt"
    File6="sts-dwa.txt"
    kubectl get deploy -n dataworks-app | grep -v 'captcha-solver\|centri-proxy\|centrifuge-centrifugo\|config-data-management\|dashboard-ui\|druid-druid-operator\|file-service\|indexingservice\|job-manager-v2\|mongodb\|outputfactory\|proxy-service\|scheduler-service\|slack-service\|sonarqube-sonarqube\|stats-service\|superset\|superset-worker\|testing-service\|workerbot\|ws-service' | awk 'NR>1{print $1}' > deploy-dwa.txt
    kubectl get sts -n dataworks-app | grep -v 'cache-service\|druid-tiny-cluster-brokers\|druid-tiny-cluster-coordinators\|druid-tiny-cluster-historicals\|druid-tiny-cluster-routers\|jobfactory\|meritdashboard\|notification-service\|pf-public-default-backlog-router\|postgres\|pulsar-bookie\|pulsar-broker\|pulsar-proxy\|pulsar-pulsar-manager\|pulsar-zookeeper\|pulsar-toolset\|redis-master\|redis-replicas\|reminder-service\|scheduler\|script-service\|sonarqube-postgresql\|superset-postgresql\|superset-redis-master\|tiny-cluster-zk' | awk 'NR>1{print $1}' > sts-dwa.txt
    lines3=$(cat $File5)
    sts_lines3=$(cat $File6)
    if [ -s "$File5" ]
    then
      for i in $lines3
      do
        kubectl scale deploy $i --replicas=1 -n dataworks-app
      done
    else
      echo "No deployment found"
    fi
    if [ -s "$File6" ]
    then
      for j in $sts_lines3
      do
        kubectl scale sts $j --replicas=1 -n dataworks-app
      done
    else
      echo "No sts found"
    fi
    sleep 10
